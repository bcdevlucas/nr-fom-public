apiVersion: v1
kind: Template
labels:
  template: fom-public-deploy
metadata:
  creationTimestamp: null
  name: fom-public-deploy
parameters:
  - description: Environment corresponding to namespace (dev/test/prod)
    displayName: Environment
    name: ENV
    value: dev
  - description: OpenShift Project (namespace prefix)
    displayName: Project
    name: PROJECT
    value: a4b31c
  - description: Name of the application component being deployed
    displayName: Name
    name: NAME
    value: fom-public
  - description: Tag (e.g. release/build) being deployed
    displayName: Tag
    name: TAG
    value: demo

objects:
  - kind: DeploymentConfig
    apiVersion: apps.openshift.io/v1
    metadata:
      creationTimestamp: null
      name: '${NAME}-${ENV}'
    namespace: '${PROJECT}-${ENV}'
    labels:
      app: fom
      app-component: '${NAME}'
      tag: '${TAG}'
    spec:
      replicas: 1
      revisionHistoryLimit: 10
      test: false
      strategy:
        type: Rolling
        rollingParams:
          updatePeriodSeconds: 1
          intervalSeconds: 1
          timeoutSeconds: 600
          maxUnavailable: 25%
          maxSurge: 25%
      resources: {}
      activeDeadlineSeconds: 21600
      selector:
        deploymentconfig: '${NAME}-${TAG}-${ENV}'
      triggers:
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - '${NAME}-${TAG}-${ENV}'
            from:
              kind: ImageStreamTag
              namespace: ${PROJECT}-tools
              name: '${NAME}:${TAG}'
        - type: ConfigChange
      template:
        metadata:
          creationTimestamp: null
          labels:
            deploymentconfig: '${NAME}-${TAG}-${ENV}'
        spec:
          containers:
            - name: '${NAME}-${TAG}-${ENV}'
              image: >-
                image-registry.openshift-image-registry.svc:5000/${PROJECT}-tools/${NAME}:${TAG}
              resources:
                limits:
                  cpu: '2'
                  memory: 8Gi              
              readinessProbe:
                httpGet:
                  path: /
                  port: 4200
                  scheme: HTTP
                timeoutSeconds: 1
                periodSeconds: 10
                successThreshold: 1
                failureThreshold: 3
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              imagePullPolicy: Always
          restartPolicy: Always
          terminationGracePeriodSeconds: 30
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
