// tslint:disable
/**
 * FOM API
 * API for FOM backend
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Observable } from 'rxjs';
import {
  BaseAPI,
  HttpHeaders,
  throwIfNullOrUndefined,
  encodeURI,
  OperationOpts,
  RawAjaxResponse,
} from '../runtime';
import { CreatePublicCommentDto, UpdatePublicCommentDto } from '../models';

export interface PublicCommentControllerCreateRequest {
  createPublicCommentDto: CreatePublicCommentDto;
}

export interface PublicCommentControllerFindOneRequest {
  id: number;
}

export interface PublicCommentControllerRemoveRequest {
  id: number;
}

export interface PublicCommentControllerUpdateRequest {
  id: number;
  updatePublicCommentDto: UpdatePublicCommentDto;
}

/**
 * no description
 */
export class PublicCommentApi extends BaseAPI {
  /**
   */
  publicCommentControllerCreate({
    createPublicCommentDto,
  }: PublicCommentControllerCreateRequest): Observable<void>;
  publicCommentControllerCreate(
    { createPublicCommentDto }: PublicCommentControllerCreateRequest,
    opts?: OperationOpts
  ): Observable<void | RawAjaxResponse<void>>;
  publicCommentControllerCreate(
    { createPublicCommentDto }: PublicCommentControllerCreateRequest,
    opts?: OperationOpts
  ): Observable<void | RawAjaxResponse<void>> {
    throwIfNullOrUndefined(
      createPublicCommentDto,
      'createPublicCommentDto',
      'publicCommentControllerCreate'
    );

    const headers: HttpHeaders = {
      'Content-Type': 'application/json',
    };

    return this.request<void>(
      {
        url: '/api/public-comment',
        method: 'POST',
        headers,
        body: createPublicCommentDto,
      },
      opts ? opts.responseOpts : undefined
    );
  }

  /**
   */
  publicCommentControllerFindOne({
    id,
  }: PublicCommentControllerFindOneRequest): Observable<void>;
  publicCommentControllerFindOne(
    { id }: PublicCommentControllerFindOneRequest,
    opts?: OperationOpts
  ): Observable<void | RawAjaxResponse<void>>;
  publicCommentControllerFindOne(
    { id }: PublicCommentControllerFindOneRequest,
    opts?: OperationOpts
  ): Observable<void | RawAjaxResponse<void>> {
    throwIfNullOrUndefined(id, 'id', 'publicCommentControllerFindOne');

    return this.request<void>(
      {
        url: '/api/public-comment/{id}'.replace('{id}', encodeURI(id)),
        method: 'GET',
      },
      opts ? opts.responseOpts : undefined
    );
  }

  /**
   */
  publicCommentControllerRemove({
    id,
  }: PublicCommentControllerRemoveRequest): Observable<void>;
  publicCommentControllerRemove(
    { id }: PublicCommentControllerRemoveRequest,
    opts?: OperationOpts
  ): Observable<void | RawAjaxResponse<void>>;
  publicCommentControllerRemove(
    { id }: PublicCommentControllerRemoveRequest,
    opts?: OperationOpts
  ): Observable<void | RawAjaxResponse<void>> {
    throwIfNullOrUndefined(id, 'id', 'publicCommentControllerRemove');

    return this.request<void>(
      {
        url: '/api/public-comment/{id}'.replace('{id}', encodeURI(id)),
        method: 'DELETE',
      },
      opts ? opts.responseOpts : undefined
    );
  }

  /**
   */
  publicCommentControllerUpdate({
    id,
    updatePublicCommentDto,
  }: PublicCommentControllerUpdateRequest): Observable<void>;
  publicCommentControllerUpdate(
    { id, updatePublicCommentDto }: PublicCommentControllerUpdateRequest,
    opts?: OperationOpts
  ): Observable<void | RawAjaxResponse<void>>;
  publicCommentControllerUpdate(
    { id, updatePublicCommentDto }: PublicCommentControllerUpdateRequest,
    opts?: OperationOpts
  ): Observable<void | RawAjaxResponse<void>> {
    throwIfNullOrUndefined(id, 'id', 'publicCommentControllerUpdate');
    throwIfNullOrUndefined(
      updatePublicCommentDto,
      'updatePublicCommentDto',
      'publicCommentControllerUpdate'
    );

    const headers: HttpHeaders = {
      'Content-Type': 'application/json',
    };

    return this.request<void>(
      {
        url: '/api/public-comment/{id}'.replace('{id}', encodeURI(id)),
        method: 'PUT',
        headers,
        body: updatePublicCommentDto,
      },
      opts ? opts.responseOpts : undefined
    );
  }
}
