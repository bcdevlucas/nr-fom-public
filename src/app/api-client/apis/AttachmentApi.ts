// tslint:disable
/**
 * FOM API
 * API for FOM backend
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Observable } from 'rxjs';
import {
  BaseAPI,
  HttpHeaders,
  throwIfNullOrUndefined,
  encodeURI,
  OperationOpts,
  RawAjaxResponse,
} from '../runtime';
import { CreateAttachmentDto, UpdateAttachmentDto } from '../models';

export interface AttachmentControllerCreateRequest {
  createAttachmentDto: CreateAttachmentDto;
}

export interface AttachmentControllerFindOneRequest {
  id: number;
}

export interface AttachmentControllerRemoveRequest {
  id: number;
}

export interface AttachmentControllerUpdateRequest {
  id: number;
  updateAttachmentDto: UpdateAttachmentDto;
}

/**
 * no description
 */
export class AttachmentApi extends BaseAPI {
  /**
   */
  attachmentControllerCreate({
    createAttachmentDto,
  }: AttachmentControllerCreateRequest): Observable<void>;
  attachmentControllerCreate(
    { createAttachmentDto }: AttachmentControllerCreateRequest,
    opts?: OperationOpts
  ): Observable<void | RawAjaxResponse<void>>;
  attachmentControllerCreate(
    { createAttachmentDto }: AttachmentControllerCreateRequest,
    opts?: OperationOpts
  ): Observable<void | RawAjaxResponse<void>> {
    throwIfNullOrUndefined(
      createAttachmentDto,
      'createAttachmentDto',
      'attachmentControllerCreate'
    );

    const headers: HttpHeaders = {
      'Content-Type': 'application/json',
    };

    return this.request<void>(
      {
        url: '/api/attachment',
        method: 'POST',
        headers,
        body: createAttachmentDto,
      },
      opts ? opts.responseOpts : undefined
    );
  }

  /**
   */
  attachmentControllerFindOne({
    id,
  }: AttachmentControllerFindOneRequest): Observable<void>;
  attachmentControllerFindOne(
    { id }: AttachmentControllerFindOneRequest,
    opts?: OperationOpts
  ): Observable<void | RawAjaxResponse<void>>;
  attachmentControllerFindOne(
    { id }: AttachmentControllerFindOneRequest,
    opts?: OperationOpts
  ): Observable<void | RawAjaxResponse<void>> {
    throwIfNullOrUndefined(id, 'id', 'attachmentControllerFindOne');

    return this.request<void>(
      {
        url: '/api/attachment/{id}'.replace('{id}', encodeURI(id)),
        method: 'GET',
      },
      opts ? opts.responseOpts : undefined
    );
  }

  /**
   */
  attachmentControllerRemove({
    id,
  }: AttachmentControllerRemoveRequest): Observable<void>;
  attachmentControllerRemove(
    { id }: AttachmentControllerRemoveRequest,
    opts?: OperationOpts
  ): Observable<void | RawAjaxResponse<void>>;
  attachmentControllerRemove(
    { id }: AttachmentControllerRemoveRequest,
    opts?: OperationOpts
  ): Observable<void | RawAjaxResponse<void>> {
    throwIfNullOrUndefined(id, 'id', 'attachmentControllerRemove');

    return this.request<void>(
      {
        url: '/api/attachment/{id}'.replace('{id}', encodeURI(id)),
        method: 'DELETE',
      },
      opts ? opts.responseOpts : undefined
    );
  }

  /**
   */
  attachmentControllerUpdate({
    id,
    updateAttachmentDto,
  }: AttachmentControllerUpdateRequest): Observable<void>;
  attachmentControllerUpdate(
    { id, updateAttachmentDto }: AttachmentControllerUpdateRequest,
    opts?: OperationOpts
  ): Observable<void | RawAjaxResponse<void>>;
  attachmentControllerUpdate(
    { id, updateAttachmentDto }: AttachmentControllerUpdateRequest,
    opts?: OperationOpts
  ): Observable<void | RawAjaxResponse<void>> {
    throwIfNullOrUndefined(id, 'id', 'attachmentControllerUpdate');
    throwIfNullOrUndefined(
      updateAttachmentDto,
      'updateAttachmentDto',
      'attachmentControllerUpdate'
    );

    const headers: HttpHeaders = {
      'Content-Type': 'application/json',
    };

    return this.request<void>(
      {
        url: '/api/attachment/{id}'.replace('{id}', encodeURI(id)),
        method: 'PUT',
        headers,
        body: updateAttachmentDto,
      },
      opts ? opts.responseOpts : undefined
    );
  }
}
