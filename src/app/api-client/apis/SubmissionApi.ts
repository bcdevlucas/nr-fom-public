// tslint:disable
/**
 * FOM API
 * API for FOM backend
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Observable } from 'rxjs';
import {
  BaseAPI,
  HttpHeaders,
  throwIfNullOrUndefined,
  encodeURI,
  OperationOpts,
  RawAjaxResponse,
} from '../runtime';
import { CreateSubmissionDto, UpdateSubmissionDto } from '../models';

export interface SubmissionControllerCreateRequest {
  createSubmissionDto: CreateSubmissionDto;
}

export interface SubmissionControllerFindOneRequest {
  id: number;
}

export interface SubmissionControllerRemoveRequest {
  id: number;
}

export interface SubmissionControllerUpdateRequest {
  id: number;
  updateSubmissionDto: UpdateSubmissionDto;
}

/**
 * no description
 */
export class SubmissionApi extends BaseAPI {
  /**
   */
  submissionControllerCreate({
    createSubmissionDto,
  }: SubmissionControllerCreateRequest): Observable<void>;
  submissionControllerCreate(
    { createSubmissionDto }: SubmissionControllerCreateRequest,
    opts?: OperationOpts
  ): Observable<void | RawAjaxResponse<void>>;
  submissionControllerCreate(
    { createSubmissionDto }: SubmissionControllerCreateRequest,
    opts?: OperationOpts
  ): Observable<void | RawAjaxResponse<void>> {
    throwIfNullOrUndefined(
      createSubmissionDto,
      'createSubmissionDto',
      'submissionControllerCreate'
    );

    const headers: HttpHeaders = {
      'Content-Type': 'application/json',
    };

    return this.request<void>(
      {
        url: '/api/submission',
        method: 'POST',
        headers,
        body: createSubmissionDto,
      },
      opts ? opts.responseOpts : undefined
    );
  }

  /**
   */
  submissionControllerFindOne({
    id,
  }: SubmissionControllerFindOneRequest): Observable<void>;
  submissionControllerFindOne(
    { id }: SubmissionControllerFindOneRequest,
    opts?: OperationOpts
  ): Observable<void | RawAjaxResponse<void>>;
  submissionControllerFindOne(
    { id }: SubmissionControllerFindOneRequest,
    opts?: OperationOpts
  ): Observable<void | RawAjaxResponse<void>> {
    throwIfNullOrUndefined(id, 'id', 'submissionControllerFindOne');

    return this.request<void>(
      {
        url: '/api/submission/{id}'.replace('{id}', encodeURI(id)),
        method: 'GET',
      },
      opts ? opts.responseOpts : undefined
    );
  }

  /**
   */
  submissionControllerRemove({
    id,
  }: SubmissionControllerRemoveRequest): Observable<void>;
  submissionControllerRemove(
    { id }: SubmissionControllerRemoveRequest,
    opts?: OperationOpts
  ): Observable<void | RawAjaxResponse<void>>;
  submissionControllerRemove(
    { id }: SubmissionControllerRemoveRequest,
    opts?: OperationOpts
  ): Observable<void | RawAjaxResponse<void>> {
    throwIfNullOrUndefined(id, 'id', 'submissionControllerRemove');

    return this.request<void>(
      {
        url: '/api/submission/{id}'.replace('{id}', encodeURI(id)),
        method: 'DELETE',
      },
      opts ? opts.responseOpts : undefined
    );
  }

  /**
   */
  submissionControllerUpdate({
    id,
    updateSubmissionDto,
  }: SubmissionControllerUpdateRequest): Observable<void>;
  submissionControllerUpdate(
    { id, updateSubmissionDto }: SubmissionControllerUpdateRequest,
    opts?: OperationOpts
  ): Observable<void | RawAjaxResponse<void>>;
  submissionControllerUpdate(
    { id, updateSubmissionDto }: SubmissionControllerUpdateRequest,
    opts?: OperationOpts
  ): Observable<void | RawAjaxResponse<void>> {
    throwIfNullOrUndefined(id, 'id', 'submissionControllerUpdate');
    throwIfNullOrUndefined(
      updateSubmissionDto,
      'updateSubmissionDto',
      'submissionControllerUpdate'
    );

    const headers: HttpHeaders = {
      'Content-Type': 'application/json',
    };

    return this.request<void>(
      {
        url: '/api/submission/{id}'.replace('{id}', encodeURI(id)),
        method: 'PUT',
        headers,
        body: updateSubmissionDto,
      },
      opts ? opts.responseOpts : undefined
    );
  }
}
